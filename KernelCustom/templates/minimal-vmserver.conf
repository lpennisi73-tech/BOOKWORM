#!/bin/bash

TEMPLATE_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

CONFIG="$TEMPLATE_DIR/../sources/linux/scripts/config"

# Couleurs
BLUE=$(tput setaf 6); GREEN=$(tput setaf 2); RED=$(tput setaf 1); BOLD=$(tput bold); RESET=$(tput sgr0)

# Logging
LOG_DIR="$TEMPLATE_DIR/../logs"
mkdir -p "$LOG_DIR"
LOG_FILE="$LOG_DIR/kernelcustom-$(date +%Y%m%d-%H%M%S).log"
exec > >(tee -a "$LOG_FILE") 2>&1

echo "${BLUE}=== [Minimal-VMServer] Application du template pour serveur virtuel ===${RESET}"
echo "ðŸ“‚ Dossier des templates : $TEMPLATE_DIR"
echo

echo "â†’ Inclusion : base-minimal.conf"; bash "$TEMPLATE_DIR/base-minimal.conf"
echo "â†’ Inclusion : modules.conf"; bash "$TEMPLATE_DIR/modules.conf"
echo "â†’ Inclusion : vga-fallback.conf"; bash "$TEMPLATE_DIR/vga-fallback.conf"
echo "â†’ Inclusion : usb-basic.conf"; bash "$TEMPLATE_DIR/usb-basic.conf"

echo; echo "${BLUE}=== Activation des drivers VirtIO ===${RESET}"
$CONFIG --enable CONFIG_VIRTIO_PCI && echo "  ${GREEN}+ VirtIO PCI activÃ©${RESET}"
$CONFIG --enable CONFIG_VIRTIO_SCSI && echo "  ${GREEN}+ VirtIO SCSI activÃ©${RESET}"
$CONFIG --enable CONFIG_VIRTIO_BALLOON && echo "  ${GREEN}+ VirtIO Balloon activÃ©${RESET}"
$CONFIG --enable CONFIG_VIRTIO_NET && echo "  ${GREEN}+ VirtIO NET activÃ©${RESET}"
$CONFIG --enable CONFIG_VIRTIO_BLK && echo "  ${GREEN}+ VirtIO BLK activÃ©${RESET}"

echo; echo "${BLUE}=== [Crypto] Configuration de la signature des modules ===${RESET}"
bash "$TEMPLATE_DIR/crypto-modsig.conf"

echo; echo "âœ… ${BOLD}${GREEN}[Minimal-VMServer] Template appliquÃ© avec succÃ¨s.${RESET}"
echo "ðŸ“œ Log sauvegardÃ© dans : $LOG_FILE"
$CONFIG --set-str MODULE_SIG_KEY "certs/signing_key.pem"
$CONFIG --enable MODULE_SIG_KEY_TYPE_RSA
$CONFIG --enable SYSTEM_TRUSTED_KEYRING
$CONFIG --set-str SYSTEM_TRUSTED_KEYS ""
